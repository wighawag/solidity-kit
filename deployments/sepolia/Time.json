{
  "address": "0x52092c12759ac66d997d402c07d5449b3f2136f8",
  "_format": "hh-sol-artifact-1",
  "contractName": "Time",
  "sourceName": "solc_0.8/debug/time/implementations/Time.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotAuthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delta",
          "type": "uint256"
        }
      ],
      "name": "TimeIncreased",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "delta",
          "type": "uint256"
        }
      ],
      "name": "increaseTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "withdrawERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506040516107ae3803806107ae83398101604081905261002f916100b8565b806001600160a01b0381161561004a5761004a600082610051565b50506100e8565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355806001600160a01b0316826001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000602082840312156100ca57600080fd5b81516001600160a01b03811681146100e157600080fd5b9392505050565b6106b7806100f76000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80639456fbcc116100505780639456fbcc146100b3578063b80777ea146100c6578063f2fde38b146100dc57600080fd5b80633c9a2a1a1461006c5780638da5cb5b14610081575b600080fd5b61007f61007a36600461056b565b6100ef565b005b610089610247565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61007f6100c13660046105a9565b610276565b6100ce61042d565b6040519081526020016100aa565b61007f6100ea3660046105e2565b610461565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015260640160405180910390fd5b6000816101d47f112c413de07a110ce0a9ace0c01e41b5b59462770325b042f0dc72c337f55f2e5490565b6101de9190610606565b9050807f112c413de07a110ce0a9ace0c01e41b5b59462770325b042f0dc72c337f55f2e557f36e7cd7cbe0c64c4f819149d7127212cc2ebb56e948ae958ef18f6d1535871c961022c61042d565b60408051918252602082018590520160405180910390a15050565b60006102717fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b905090565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102fc576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83169063a9059cbb90839083906370a0823190602401602060405180830381865afa158015610370573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103949190610646565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af1158015610404573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610428919061065f565b505050565b60006104577f112c413de07a110ce0a9ace0c01e41b5b59462770325b042f0dc72c337f55f2e5490565b6102719042610606565b600061048b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b90503373ffffffffffffffffffffffffffffffffffffffff8216146104dc576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104e681836104ea565b5050565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103558073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006020828403121561057d57600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff811681146105a657600080fd5b50565b600080604083850312156105bc57600080fd5b82356105c781610584565b915060208301356105d781610584565b809150509250929050565b6000602082840312156105f457600080fd5b81356105ff81610584565b9392505050565b80820180821115610640577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b60006020828403121561065857600080fd5b5051919050565b60006020828403121561067157600080fd5b815180151581146105ff57600080fdfea2646970667358221220699349f76833f0ac51075bfb7b26e9f49ac3c328a3f97fbd1032a117bc89b29164736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c80639456fbcc116100505780639456fbcc146100b3578063b80777ea146100c6578063f2fde38b146100dc57600080fd5b80633c9a2a1a1461006c5780638da5cb5b14610081575b600080fd5b61007f61007a36600461056b565b6100ef565b005b610089610247565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61007f6100c13660046105a9565b610276565b6100ce61042d565b6040519081526020016100aa565b61007f6100ea3660046105e2565b610461565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015260640160405180910390fd5b6000816101d47f112c413de07a110ce0a9ace0c01e41b5b59462770325b042f0dc72c337f55f2e5490565b6101de9190610606565b9050807f112c413de07a110ce0a9ace0c01e41b5b59462770325b042f0dc72c337f55f2e557f36e7cd7cbe0c64c4f819149d7127212cc2ebb56e948ae958ef18f6d1535871c961022c61042d565b60408051918252602082018590520160405180910390a15050565b60006102717fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b905090565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102fc576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83169063a9059cbb90839083906370a0823190602401602060405180830381865afa158015610370573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103949190610646565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af1158015610404573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610428919061065f565b505050565b60006104577f112c413de07a110ce0a9ace0c01e41b5b59462770325b042f0dc72c337f55f2e5490565b6102719042610606565b600061048b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b90503373ffffffffffffffffffffffffffffffffffffffff8216146104dc576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104e681836104ea565b5050565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103558073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006020828403121561057d57600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff811681146105a657600080fd5b50565b600080604083850312156105bc57600080fd5b82356105c781610584565b915060208301356105d781610584565b809150509250929050565b6000602082840312156105f457600080fd5b81356105ff81610584565b9392505050565b80820180821115610640577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b60006020828403121561065857600080fd5b5051919050565b60006020828403121561067157600080fd5b815180151581146105ff57600080fdfea2646970667358221220699349f76833f0ac51075bfb7b26e9f49ac3c328a3f97fbd1032a117bc89b29164736f6c63430008140033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "events": {
      "OwnershipTransferred(address,address)": {
        "params": {
          "newOwner": "the new owner",
          "previousOwner": "the previous owner"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "returns": {
          "_0": "The address of the owner."
        }
      },
      "transferOwnership(address)": {
        "details": "Set newOwner to address(0) to renounce any ownership.",
        "params": {
          "newOwner": "The address of the new owner of the contract"
        }
      },
      "withdrawERC20(address,address)": {
        "params": {
          "to": "address that will receive the tokens",
          "token": "ERC20 contract address to withdraw"
        }
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {
        "@_4265": {
          "entryPoint": null,
          "id": 4265,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_61": {
          "entryPoint": null,
          "id": 61,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_setOwner_152": {
          "entryPoint": 81,
          "id": 152,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "abi_decode_tuple_t_address_fromMemory": {
          "entryPoint": 184,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:306:57",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:57",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "95:209:57",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "141:16:57",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "150:1:57",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "153:1:57",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "143:6:57"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "143:12:57"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "143:12:57"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "116:7:57"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "125:9:57"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "112:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "112:23:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "137:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "108:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "108:32:57"
                      },
                      "nodeType": "YulIf",
                      "src": "105:52:57"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "166:29:57",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "185:9:57"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "179:5:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "179:16:57"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "170:5:57",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "258:16:57",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "267:1:57",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "270:1:57",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "260:6:57"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "260:12:57"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "260:12:57"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "217:5:57"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "228:5:57"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "243:3:57",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "248:1:57",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "239:3:57"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "239:11:57"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "252:1:57",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:57"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:19:57"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "224:3:57"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "224:31:57"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "214:2:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "214:42:57"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "207:6:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "207:50:57"
                      },
                      "nodeType": "YulIf",
                      "src": "204:70:57"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "283:15:57",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "293:5:57"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "283:6:57"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "61:9:57",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "72:7:57",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "84:6:57",
                    "type": ""
                  }
                ],
                "src": "14:290:57"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
          "id": 57,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "linkReferences": {},
      "object": "608060405234801561001057600080fd5b506040516107ae3803806107ae83398101604081905261002f916100b8565b806001600160a01b0381161561004a5761004a600082610051565b50506100e8565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355806001600160a01b0316826001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000602082840312156100ca57600080fd5b81516001600160a01b03811681146100e157600080fd5b9392505050565b6106b7806100f76000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80639456fbcc116100505780639456fbcc146100b3578063b80777ea146100c6578063f2fde38b146100dc57600080fd5b80633c9a2a1a1461006c5780638da5cb5b14610081575b600080fd5b61007f61007a36600461056b565b6100ef565b005b610089610247565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61007f6100c13660046105a9565b610276565b6100ce61042d565b6040519081526020016100aa565b61007f6100ea3660046105e2565b610461565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015260640160405180910390fd5b6000816101d47f112c413de07a110ce0a9ace0c01e41b5b59462770325b042f0dc72c337f55f2e5490565b6101de9190610606565b9050807f112c413de07a110ce0a9ace0c01e41b5b59462770325b042f0dc72c337f55f2e557f36e7cd7cbe0c64c4f819149d7127212cc2ebb56e948ae958ef18f6d1535871c961022c61042d565b60408051918252602082018590520160405180910390a15050565b60006102717fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b905090565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102fc576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83169063a9059cbb90839083906370a0823190602401602060405180830381865afa158015610370573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103949190610646565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af1158015610404573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610428919061065f565b505050565b60006104577f112c413de07a110ce0a9ace0c01e41b5b59462770325b042f0dc72c337f55f2e5490565b6102719042610606565b600061048b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b90503373ffffffffffffffffffffffffffffffffffffffff8216146104dc576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104e681836104ea565b5050565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103558073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006020828403121561057d57600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff811681146105a657600080fd5b50565b600080604083850312156105bc57600080fd5b82356105c781610584565b915060208301356105d781610584565b809150509250929050565b6000602082840312156105f457600080fd5b81356105ff81610584565b9392505050565b80820180821115610640577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b60006020828403121561065857600080fd5b5051919050565b60006020828403121561067157600080fd5b815180151581146105ff57600080fdfea2646970667358221220699349f76833f0ac51075bfb7b26e9f49ac3c328a3f97fbd1032a117bc89b29164736f6c63430008140033",
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x7AE CODESIZE SUB DUP1 PUSH2 0x7AE DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xB8 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x4A JUMPI PUSH2 0x4A PUSH1 0x0 DUP3 PUSH2 0x51 JUMP JUMPDEST POP POP PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SSTORE DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x6B7 DUP1 PUSH2 0xF7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x67 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9456FBCC GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x9456FBCC EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0xB80777EA EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C9A2A1A EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x81 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F PUSH2 0x7A CALLDATASIZE PUSH1 0x4 PUSH2 0x56B JUMP JUMPDEST PUSH2 0xEF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x89 PUSH2 0x247 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH2 0xC1 CALLDATASIZE PUSH1 0x4 PUSH2 0x5A9 JUMP JUMPDEST PUSH2 0x276 JUMP JUMPDEST PUSH2 0xCE PUSH2 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAA JUMP JUMPDEST PUSH2 0x7F PUSH2 0xEA CALLDATASIZE PUSH1 0x4 PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x461 JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F545F415554484F52495A4544000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1D4 PUSH32 0x112C413DE07A110CE0A9ACE0C01E41B5B59462770325B042F0DC72C337F55F2E SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x606 JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0x112C413DE07A110CE0A9ACE0C01E41B5B59462770325B042F0DC72C337F55F2E SSTORE PUSH32 0x36E7CD7CBE0C64C4F819149D7127212CC2EBB56E948AE958EF18F6D1535871C9 PUSH2 0x22C PUSH2 0x42D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2FC JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA8E4EB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 DUP4 SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x370 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x404 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x65F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x457 PUSH32 0x112C413DE07A110CE0A9ACE0C01E41B5B59462770325B042F0DC72C337F55F2E SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x271 SWAP1 TIMESTAMP PUSH2 0x606 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48B PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA8E4EB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E6 DUP2 DUP4 PUSH2 0x4EA JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SSTORE DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x57D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x5C7 DUP2 PUSH2 0x584 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x5D7 DUP2 PUSH2 0x584 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5FF DUP2 PUSH2 0x584 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x640 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x5FF JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x9349F76833F0AC51075B 0xFB PUSH28 0x26E9F49AC3C328A3F97FBD1032A117BC89B29164736F6C6343000814 STOP CALLER ",
      "sourceMap": "147:94:42:-:0;;;197:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;230:5;-1:-1:-1;;;;;340:26:2;;;336:92;;382:35;400:1;404:12;382:9;:35::i;:::-;292:142;197:42:42;147:94;;1629:327:2;1871:8;1803:66;1796:84;1940:8;-1:-1:-1;;;;;1904:45:2;1925:13;-1:-1:-1;;;;;1904:45:2;;;;;;;;;;;1629:327;;:::o;14:290:57:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:57;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:57:o;:::-;147:94:42;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@_delta_4326": {
          "entryPoint": null,
          "id": 4326,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_getOwner_138": {
          "entryPoint": null,
          "id": 138,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_setOwner_152": {
          "entryPoint": 1258,
          "id": 152,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@increaseTime_4319": {
          "entryPoint": 239,
          "id": 4319,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@owner_71": {
          "entryPoint": 583,
          "id": 71,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@timestamp_4289": {
          "entryPoint": 1069,
          "id": 4289,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@transferOwnership_97": {
          "entryPoint": 1121,
          "id": 97,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@withdrawERC20_130": {
          "entryPoint": 630,
          "id": 130,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "abi_decode_tuple_t_address": {
          "entryPoint": 1506,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_bool_fromMemory": {
          "entryPoint": 1631,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_contract$_IERC20_$1354t_address": {
          "entryPoint": 1449,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_uint256": {
          "entryPoint": 1387,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_uint256_fromMemory": {
          "entryPoint": 1606,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "checked_add_t_uint256": {
          "entryPoint": 1542,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "validator_revert_contract_IERC20": {
          "entryPoint": 1412,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:3113:57",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:57",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "84:110:57",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "130:16:57",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "139:1:57",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "142:1:57",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "132:6:57"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "132:12:57"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "132:12:57"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "105:7:57"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "114:9:57"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "101:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "101:23:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "126:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "97:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "97:32:57"
                      },
                      "nodeType": "YulIf",
                      "src": "94:52:57"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "155:33:57",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "178:9:57"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "165:12:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "165:23:57"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "155:6:57"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "50:9:57",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "61:7:57",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "73:6:57",
                    "type": ""
                  }
                ],
                "src": "14:180:57"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "300:125:57",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "310:26:57",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "322:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "333:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "318:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "318:18:57"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "310:4:57"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "352:9:57"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "367:6:57"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "375:42:57",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "363:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "363:55:57"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "345:6:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "345:74:57"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "345:74:57"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "269:9:57",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "280:6:57",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "291:4:57",
                    "type": ""
                  }
                ],
                "src": "199:226:57"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "483:109:57",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "570:16:57",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "579:1:57",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "582:1:57",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "572:6:57"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "572:12:57"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "572:12:57"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "506:5:57"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "517:5:57"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "524:42:57",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "513:3:57"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "513:54:57"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "503:2:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "503:65:57"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "496:6:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "496:73:57"
                      },
                      "nodeType": "YulIf",
                      "src": "493:93:57"
                    }
                  ]
                },
                "name": "validator_revert_contract_IERC20",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "472:5:57",
                    "type": ""
                  }
                ],
                "src": "430:162:57"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "699:317:57",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "745:16:57",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "754:1:57",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "757:1:57",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "747:6:57"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "747:12:57"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "747:12:57"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "720:7:57"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "729:9:57"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "716:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "716:23:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "741:2:57",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "712:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "712:32:57"
                      },
                      "nodeType": "YulIf",
                      "src": "709:52:57"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "770:36:57",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "796:9:57"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "783:12:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "783:23:57"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "774:5:57",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "848:5:57"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_contract_IERC20",
                          "nodeType": "YulIdentifier",
                          "src": "815:32:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "815:39:57"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "815:39:57"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "863:15:57",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "873:5:57"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "863:6:57"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "887:47:57",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "919:9:57"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "930:2:57",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "915:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "915:18:57"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "902:12:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "902:32:57"
                      },
                      "variables": [
                        {
                          "name": "value_1",
                          "nodeType": "YulTypedName",
                          "src": "891:7:57",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "976:7:57"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_contract_IERC20",
                          "nodeType": "YulIdentifier",
                          "src": "943:32:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "943:41:57"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "943:41:57"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "993:17:57",
                      "value": {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1003:7:57"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "993:6:57"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_contract$_IERC20_$1354t_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "657:9:57",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "668:7:57",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "680:6:57",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "688:6:57",
                    "type": ""
                  }
                ],
                "src": "597:419:57"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1122:76:57",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1132:26:57",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1144:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1155:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1140:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1140:18:57"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1132:4:57"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1174:9:57"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1185:6:57"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1167:6:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1167:25:57"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1167:25:57"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1091:9:57",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1102:6:57",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1113:4:57",
                    "type": ""
                  }
                ],
                "src": "1021:177:57"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1273:185:57",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1319:16:57",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1328:1:57",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1331:1:57",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1321:6:57"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1321:12:57"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1321:12:57"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1294:7:57"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1303:9:57"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1290:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1290:23:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1315:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1286:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1286:32:57"
                      },
                      "nodeType": "YulIf",
                      "src": "1283:52:57"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1344:36:57",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1370:9:57"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1357:12:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1357:23:57"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "1348:5:57",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1422:5:57"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_contract_IERC20",
                          "nodeType": "YulIdentifier",
                          "src": "1389:32:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1389:39:57"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1389:39:57"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1437:15:57",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1447:5:57"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1437:6:57"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1239:9:57",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1250:7:57",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1262:6:57",
                    "type": ""
                  }
                ],
                "src": "1203:255:57"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1637:164:57",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1654:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1665:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1647:6:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1647:21:57"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1647:21:57"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1688:9:57"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1699:2:57",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1684:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1684:18:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1704:2:57",
                            "type": "",
                            "value": "14"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1677:6:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1677:30:57"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1677:30:57"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1727:9:57"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1738:2:57",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1723:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1723:18:57"
                          },
                          {
                            "hexValue": "4e4f545f415554484f52495a4544",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1743:16:57",
                            "type": "",
                            "value": "NOT_AUTHORIZED"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1716:6:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1716:44:57"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1716:44:57"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1769:26:57",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1781:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1792:2:57",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1777:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1777:18:57"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1769:4:57"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1614:9:57",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1628:4:57",
                    "type": ""
                  }
                ],
                "src": "1463:338:57"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1854:231:57",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1864:16:57",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "1875:1:57"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "1878:1:57"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1871:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1871:9:57"
                      },
                      "variableNames": [
                        {
                          "name": "sum",
                          "nodeType": "YulIdentifier",
                          "src": "1864:3:57"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1911:168:57",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1932:1:57",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1935:77:57",
                                  "type": "",
                                  "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "1925:6:57"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1925:88:57"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1925:88:57"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2033:1:57",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2036:4:57",
                                  "type": "",
                                  "value": "0x11"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "2026:6:57"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2026:15:57"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2026:15:57"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2061:1:57",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2064:4:57",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2054:6:57"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2054:15:57"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2054:15:57"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "1895:1:57"
                          },
                          {
                            "name": "sum",
                            "nodeType": "YulIdentifier",
                            "src": "1898:3:57"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1892:2:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1892:10:57"
                      },
                      "nodeType": "YulIf",
                      "src": "1889:190:57"
                    }
                  ]
                },
                "name": "checked_add_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "1837:1:57",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "1840:1:57",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "sum",
                    "nodeType": "YulTypedName",
                    "src": "1846:3:57",
                    "type": ""
                  }
                ],
                "src": "1806:279:57"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2219:119:57",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "2229:26:57",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2241:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2252:2:57",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2237:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2237:18:57"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2229:4:57"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2271:9:57"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2282:6:57"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2264:6:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2264:25:57"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2264:25:57"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2309:9:57"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2320:2:57",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2305:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2305:18:57"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2325:6:57"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2298:6:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2298:34:57"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2298:34:57"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2180:9:57",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "2191:6:57",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2199:6:57",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2210:4:57",
                    "type": ""
                  }
                ],
                "src": "2090:248:57"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2424:103:57",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2470:16:57",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2479:1:57",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2482:1:57",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2472:6:57"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2472:12:57"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2472:12:57"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2445:7:57"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2454:9:57"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2441:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2441:23:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2466:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2437:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2437:32:57"
                      },
                      "nodeType": "YulIf",
                      "src": "2434:52:57"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2495:26:57",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2511:9:57"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2505:5:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2505:16:57"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2495:6:57"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2390:9:57",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2401:7:57",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2413:6:57",
                    "type": ""
                  }
                ],
                "src": "2343:184:57"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2661:168:57",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "2671:26:57",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2683:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2694:2:57",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2679:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2679:18:57"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2671:4:57"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2713:9:57"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2728:6:57"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2736:42:57",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2724:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2724:55:57"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2706:6:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2706:74:57"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2706:74:57"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2800:9:57"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2811:2:57",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2796:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2796:18:57"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2816:6:57"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2789:6:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2789:34:57"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2789:34:57"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2622:9:57",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "2633:6:57",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2641:6:57",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2652:4:57",
                    "type": ""
                  }
                ],
                "src": "2532:297:57"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2912:199:57",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2958:16:57",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2967:1:57",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2970:1:57",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2960:6:57"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2960:12:57"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2960:12:57"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2933:7:57"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2942:9:57"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2929:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2929:23:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2954:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2925:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2925:32:57"
                      },
                      "nodeType": "YulIf",
                      "src": "2922:52:57"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2983:29:57",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3002:9:57"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2996:5:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2996:16:57"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "2987:5:57",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3065:16:57",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3074:1:57",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3077:1:57",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3067:6:57"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3067:12:57"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3067:12:57"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3034:5:57"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3055:5:57"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "3048:6:57"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3048:13:57"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3041:6:57"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3041:21:57"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "3031:2:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3031:32:57"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3024:6:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3024:40:57"
                      },
                      "nodeType": "YulIf",
                      "src": "3021:60:57"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3090:15:57",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3100:5:57"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3090:6:57"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bool_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2878:9:57",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2889:7:57",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2901:6:57",
                    "type": ""
                  }
                ],
                "src": "2834:277:57"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$1354t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_IERC20(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"NOT_AUTHORIZED\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
          "id": 57,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {},
      "linkReferences": {},
      "object": "608060405234801561001057600080fd5b50600436106100675760003560e01c80639456fbcc116100505780639456fbcc146100b3578063b80777ea146100c6578063f2fde38b146100dc57600080fd5b80633c9a2a1a1461006c5780638da5cb5b14610081575b600080fd5b61007f61007a36600461056b565b6100ef565b005b610089610247565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61007f6100c13660046105a9565b610276565b6100ce61042d565b6040519081526020016100aa565b61007f6100ea3660046105e2565b610461565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015260640160405180910390fd5b6000816101d47f112c413de07a110ce0a9ace0c01e41b5b59462770325b042f0dc72c337f55f2e5490565b6101de9190610606565b9050807f112c413de07a110ce0a9ace0c01e41b5b59462770325b042f0dc72c337f55f2e557f36e7cd7cbe0c64c4f819149d7127212cc2ebb56e948ae958ef18f6d1535871c961022c61042d565b60408051918252602082018590520160405180910390a15050565b60006102717fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b905090565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102fc576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83169063a9059cbb90839083906370a0823190602401602060405180830381865afa158015610370573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103949190610646565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af1158015610404573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610428919061065f565b505050565b60006104577f112c413de07a110ce0a9ace0c01e41b5b59462770325b042f0dc72c337f55f2e5490565b6102719042610606565b600061048b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b90503373ffffffffffffffffffffffffffffffffffffffff8216146104dc576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104e681836104ea565b5050565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103558073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006020828403121561057d57600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff811681146105a657600080fd5b50565b600080604083850312156105bc57600080fd5b82356105c781610584565b915060208301356105d781610584565b809150509250929050565b6000602082840312156105f457600080fd5b81356105ff81610584565b9392505050565b80820180821115610640577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b60006020828403121561065857600080fd5b5051919050565b60006020828403121561067157600080fd5b815180151581146105ff57600080fdfea2646970667358221220699349f76833f0ac51075bfb7b26e9f49ac3c328a3f97fbd1032a117bc89b29164736f6c63430008140033",
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x67 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9456FBCC GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x9456FBCC EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0xB80777EA EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C9A2A1A EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x81 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F PUSH2 0x7A CALLDATASIZE PUSH1 0x4 PUSH2 0x56B JUMP JUMPDEST PUSH2 0xEF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x89 PUSH2 0x247 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH2 0xC1 CALLDATASIZE PUSH1 0x4 PUSH2 0x5A9 JUMP JUMPDEST PUSH2 0x276 JUMP JUMPDEST PUSH2 0xCE PUSH2 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAA JUMP JUMPDEST PUSH2 0x7F PUSH2 0xEA CALLDATASIZE PUSH1 0x4 PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x461 JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F545F415554484F52495A4544000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1D4 PUSH32 0x112C413DE07A110CE0A9ACE0C01E41B5B59462770325B042F0DC72C337F55F2E SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x606 JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0x112C413DE07A110CE0A9ACE0C01E41B5B59462770325B042F0DC72C337F55F2E SSTORE PUSH32 0x36E7CD7CBE0C64C4F819149D7127212CC2EBB56E948AE958EF18F6D1535871C9 PUSH2 0x22C PUSH2 0x42D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2FC JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA8E4EB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 DUP4 SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x370 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x404 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x65F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x457 PUSH32 0x112C413DE07A110CE0A9ACE0C01E41B5B59462770325B042F0DC72C337F55F2E SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x271 SWAP1 TIMESTAMP PUSH2 0x606 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48B PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA8E4EB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E6 DUP2 DUP4 PUSH2 0x4EA JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SSTORE DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x57D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x5C7 DUP2 PUSH2 0x584 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x5D7 DUP2 PUSH2 0x584 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5FF DUP2 PUSH2 0x584 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x640 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x5FF JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x9349F76833F0AC51075B 0xFB PUSH28 0x26E9F49AC3C328A3F97FBD1032A117BC89B29164736F6C6343000814 STOP CALLER ",
      "sourceMap": "147:94:42:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;352:343:43;;;;;;:::i;:::-;;:::i;:::-;;468:84:2;;;:::i;:::-;;;375:42:57;363:55;;;345:74;;333:2;318:18;468:84:2;;;;;;;;865:212;;;;;;:::i;:::-;;:::i;236:110:43:-;;;:::i;:::-;;;1167:25:57;;;1155:2;1140:18;236:110:43;1021:177:57;586:239:2;;;;;;:::i;:::-;;:::i;352:343:43:-;1540:66:2;1534:73;425:25:43;;:10;:25;;;417:52;;;;;;;1665:2:57;417:52:43;;;1647:21:57;1704:2;1684:18;;;1677:30;1743:16;1723:18;;;1716:44;1777:18;;417:52:43;;;;;;;;479:16;509:5;498:8;842:66;836:73;;701:224;498:8;:16;;;;:::i;:::-;479:35;;622:8;554:66;547:84;655:33;669:11;:9;:11::i;:::-;655:33;;;2264:25:57;;;2320:2;2305:18;;2298:34;;;2237:18;655:33:43;;;;;;;407:288;352:343;:::o;468:84:2:-;508:7;534:11;1540:66;1534:73;;1345:278;534:11;527:18;;468:84;:::o;865:212::-;1540:66;1534:73;937:25;;:10;:25;;;933:78;;985:15;;;;;;;;;;;;;;933:78;1039:30;;;;;1063:4;1039:30;;;345:74:57;1020:14:2;;;;;;1035:2;;1020:14;;1039:15;;318:18:57;;1039:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1020:50;;;;;;;;;;2736:42:57;2724:55;;;1020:50:2;;;2706:74:57;2796:18;;;2789:34;2679:18;;1020:50:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;865:212;;:::o;236:110:43:-;287:7;331:8;842:66;836:73;;701:224;331:8;313:26;;:15;:26;:::i;586:239:2:-;650:21;674:11;1540:66;1534:73;;1345:278;674:11;650:35;-1:-1:-1;699:10:2;:27;;;;695:80;;749:15;;;;;;;;;;;;;;695:80;784:34;794:13;809:8;784:9;:34::i;:::-;640:185;586:239;:::o;1629:327::-;1871:8;1803:66;1796:84;1940:8;1904:45;;1925:13;1904:45;;;;;;;;;;;;1629:327;;:::o;14:180:57:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:57;;14:180;-1:-1:-1;14:180:57:o;430:162::-;524:42;517:5;513:54;506:5;503:65;493:93;;582:1;579;572:12;493:93;430:162;:::o;597:419::-;680:6;688;741:2;729:9;720:7;716:23;712:32;709:52;;;757:1;754;747:12;709:52;796:9;783:23;815:39;848:5;815:39;:::i;:::-;873:5;-1:-1:-1;930:2:57;915:18;;902:32;943:41;902:32;943:41;:::i;:::-;1003:7;993:17;;;597:419;;;;;:::o;1203:255::-;1262:6;1315:2;1303:9;1294:7;1290:23;1286:32;1283:52;;;1331:1;1328;1321:12;1283:52;1370:9;1357:23;1389:39;1422:5;1389:39;:::i;:::-;1447:5;1203:255;-1:-1:-1;;;1203:255:57:o;1806:279::-;1871:9;;;1892:10;;;1889:190;;;1935:77;1932:1;1925:88;2036:4;2033:1;2026:15;2064:4;2061:1;2054:15;1889:190;1806:279;;;;:::o;2343:184::-;2413:6;2466:2;2454:9;2445:7;2441:23;2437:32;2434:52;;;2482:1;2479;2472:12;2434:52;-1:-1:-1;2505:16:57;;2343:184;-1:-1:-1;2343:184:57:o;2834:277::-;2901:6;2954:2;2942:9;2933:7;2929:23;2925:32;2922:52;;;2970:1;2967;2960:12;2922:52;3002:9;2996:16;3055:5;3048:13;3041:21;3034:5;3031:32;3021:60;;3077:1;3074;3067:12"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "343800",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "increaseTime(uint256)": "infinite",
        "owner()": "2351",
        "timestamp()": "2426",
        "transferOwnership(address)": "26171",
        "withdrawERC20(address,address)": "infinite"
      }
    },
    "methodIdentifiers": {
      "increaseTime(uint256)": "3c9a2a1a",
      "owner()": "8da5cb5b",
      "timestamp()": "b80777ea",
      "transferOwnership(address)": "f2fde38b",
      "withdrawERC20(address,address)": "9456fbcc"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delta\",\"type\":\"uint256\"}],\"name\":\"TimeIncreased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"delta\",\"type\":\"uint256\"}],\"name\":\"increaseTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OwnershipTransferred(address,address)\":{\"params\":{\"newOwner\":\"the new owner\",\"previousOwner\":\"the previous owner\"}}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"returns\":{\"_0\":\"The address of the owner.\"}},\"transferOwnership(address)\":{\"details\":\"Set newOwner to address(0) to renounce any ownership.\",\"params\":{\"newOwner\":\"The address of the new owner of the contract\"}},\"withdrawERC20(address,address)\":{\"params\":{\"to\":\"address that will receive the tokens\",\"token\":\"ERC20 contract address to withdraw\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"NotAuthorized()\":[{\"notice\":\"Not authorized to perform this operation\"}]},\"events\":{\"OwnershipTransferred(address,address)\":{\"notice\":\"This emits when ownership of the contract changes.\"}},\"kind\":\"user\",\"methods\":{\"owner()\":{\"notice\":\"Get the address of the owner\"},\"transferOwnership(address)\":{\"notice\":\"Set the address of the new owner of the contract\"},\"withdrawERC20(address,address)\":{\"notice\":\"withdraw the total balance of a particular ERC20 token owned by this contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solc_0.8/debug/time/implementations/Time.sol\":\"Time\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"solc_0.8/ERC173/implementations/Owned.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/IERC173.sol\\\";\\nimport \\\"../interfaces/IWithdrawable.sol\\\";\\nimport \\\"../internal/UsingInternalOwner.sol\\\";\\nimport \\\"../../ERC20/interfaces/IERC20.sol\\\";\\n\\ncontract Owned is IERC173, IWithdrawable, UsingInternalOwner {\\n    constructor(address initialOwner) {\\n        if (initialOwner != address(0)) {\\n            _setOwner(address(0), initialOwner);\\n        }\\n    }\\n\\n    /// @inheritdoc IERC173\\n    function owner() external view returns (address) {\\n        return _getOwner();\\n    }\\n\\n    /// @inheritdoc IERC173\\n    function transferOwnership(address newOwner) external {\\n        address previousOwner = _getOwner();\\n        if (msg.sender != previousOwner) {\\n            revert NotAuthorized();\\n        }\\n        _setOwner(previousOwner, newOwner);\\n    }\\n\\n    /// @inheritdoc IWithdrawable\\n    function withdrawERC20(IERC20 token, address to) external {\\n        if (msg.sender != _getOwner()) {\\n            revert NotAuthorized();\\n        }\\n        token.transfer(to, token.balanceOf(address(this)));\\n    }\\n\\n    // ------------------------------------------------------------------------------------------------------------------\\n    // INTERNALS\\n    // ------------------------------------------------------------------------------------------------------------------\\n\\n    function _getOwner() internal view override returns (address ownerAddress) {\\n        // solhint-disable-next-line security/no-inline-assembly\\n        assembly {\\n            ownerAddress := sload(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103)\\n        }\\n    }\\n\\n    function _setOwner(address previousOwner, address newOwner) internal {\\n        // solhint-disable-next-line security/no-inline-assembly\\n        assembly {\\n            sstore(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103, newOwner)\\n        }\\n        emit OwnershipTransferred(previousOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x1d30757ad66a9143e169b203d23273fe7df6b4927fee810605febbfe3e0f413d\",\"license\":\"MIT\"},\"solc_0.8/ERC173/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/GenericErrors.sol\\\";\\n\\ninterface IERC173 {\\n    /// @notice This emits when ownership of the contract changes.\\n    /// @param previousOwner the previous owner\\n    /// @param newOwner the new owner\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /// @notice Get the address of the owner\\n    /// @return The address of the owner.\\n    function owner() external view returns (address);\\n\\n    /// @notice Set the address of the new owner of the contract\\n    /// @dev Set newOwner to address(0) to renounce any ownership.\\n    /// @param newOwner The address of the new owner of the contract\\n    function transferOwnership(address newOwner) external;\\n}\\n\",\"keccak256\":\"0x4b298c7655514c191e1e4cc1032fc9cf30311d682a7fab1487d9ab75d1d65a23\",\"license\":\"MIT\"},\"solc_0.8/ERC173/interfaces/IWithdrawable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../ERC20/interfaces/IERC20.sol\\\";\\n\\ninterface IWithdrawable {\\n    /// @notice withdraw the total balance of a particular ERC20 token owned by this contract.\\n    /// @param token ERC20 contract address to withdraw\\n    /// @param to address that will receive the tokens\\n    function withdrawERC20(IERC20 token, address to) external;\\n}\\n\",\"keccak256\":\"0x3df792413ff1512fb3791ab6e37429223f5f4d681bf3637d0d2fbca387b13ff7\",\"license\":\"MIT\"},\"solc_0.8/ERC173/internal/UsingInternalOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nabstract contract UsingInternalOwner {\\n    function _getOwner() internal view virtual returns (address);\\n}\\n\",\"keccak256\":\"0xf2667b88db078a7438baba699905eb32e7fa3f2678ec02532f0fac1ff1d3b8a2\",\"license\":\"MIT\"},\"solc_0.8/ERC20/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/IERC20Errors.sol\\\";\\n\\ninterface IERC20 {\\n    /// @notice trigger when tokens are transferred, including zero value transfers.\\n    /// @param from the account the tokens are sent from\\n    /// @param to the account the tokens are sent to\\n    /// @param value number of tokens sent\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /// @notice trigger on approval amount being set.\\n    ///   Note that Transfer events need to be considered to compute the current allowance.\\n    /// @param owner the account approving the `spender`\\n    /// @param spender the account allowed to spend\\n    /// @param value the amount granted\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /// @notice Returns the total token supply.\\n    function totalSupply() external view returns (uint256);\\n\\n    /// @notice Returns the number of decimals the token uses.\\n    function decimals() external view returns (uint8);\\n\\n    /// @notice Returns the symbol of the token.\\n    function symbol() external view returns (string memory);\\n\\n    /// @notice Returns the name of the token.\\n    function name() external view returns (string memory);\\n\\n    /// @notice Returns the account balance of another account with address `owner`.\\n    function balanceOf(address owner) external view returns (uint256);\\n\\n    /// @notice Transfers `amount` of tokens to address `to`.\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /// @notice Returns the amount which `spender` is still allowed to withdraw from `owner`.\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /// @notice Allows `spender` to withdraw from your account multiple times, up to `amount`.\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /// @notice Transfers `amount` tokens from address `from` to address `to`.\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x15bb1e4e1340b29eefc06b8826fcf9e6455e25ba972709672da7d3788777133f\",\"license\":\"MIT\"},\"solc_0.8/ERC20/interfaces/IERC20Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The msg value do not match the expected value\\n/// @param provided msg.value amount provided\\n/// @param expected value expected\\nerror InvalidMsgValue(uint256 provided, uint256 expected);\\n/// @notice The total amount provided do not match the expected value\\n/// @param provided msg.value amount provided\\n/// @param expected value expected\\nerror InvalidTotalAmount(uint256 provided, uint256 expected);\\n/// @notice An invalid address is specified (for example: zero address)\\n/// @param addr invalid address\\nerror InvalidAddress(address addr);\\n/// @notice the amount requested exceed the allowance\\n/// @param currentAllowance the current allowance\\n/// @param expected amount expected\\nerror NotAuthorizedAllowance(uint256 currentAllowance, uint256 expected);\\n/// @notice the amount requested exceed the balance\\n/// @param currentBalance the current balance\\n/// @param expected amount expected\\nerror NotEnoughTokens(uint256 currentBalance, uint256 expected);\\n\",\"keccak256\":\"0xc8ab4cfee19338da32d2fc5473e1ee740bf608c59196ebd16de74294c4813ae9\",\"license\":\"MIT\"},\"solc_0.8/debug/time/implementations/Time.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./UsingControlledTime.sol\\\";\\nimport \\\"../../..//ERC173/implementations/Owned.sol\\\";\\n\\ncontract Time is Owned, UsingControlledTime {\\n    constructor(address owner) Owned(owner) {}\\n}\\n\",\"keccak256\":\"0x015116b78e1d53d3264593939efcef230fb66b828d7362a6158ae5f4644f03bf\",\"license\":\"MIT\"},\"solc_0.8/debug/time/implementations/UsingControlledTime.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../../ERC173/internal/UsingInternalOwner.sol\\\";\\nimport \\\"../interfaces/ITime.sol\\\";\\n\\nabstract contract UsingControlledTime is UsingInternalOwner, ITime, ITimeSetter {\\n    function timestamp() public view override returns (uint256) {\\n        return block.timestamp + _delta();\\n    }\\n\\n    function increaseTime(uint256 delta) external override {\\n        require(msg.sender == _getOwner(), \\\"NOT_AUTHORIZED\\\");\\n        uint256 newDelta = _delta() + delta;\\n        assembly {\\n            sstore(0x112c413de07a110ce0a9ace0c01e41b5b59462770325b042f0dc72c337f55f2e, newDelta)\\n        }\\n        emit TimeIncreased(timestamp(), delta);\\n    }\\n\\n    function _delta() internal view returns (uint256 delta) {\\n        assembly {\\n            // keccak256(\\\"time\\\") - 1\\n            delta := sload(0x112c413de07a110ce0a9ace0c01e41b5b59462770325b042f0dc72c337f55f2e)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc94b96fb0ae2f6839df39eaa128e98534153fb5bccf69e55321ff05e6af33eda\",\"license\":\"MIT\"},\"solc_0.8/debug/time/interfaces/ITime.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ITime {\\n    function timestamp() external view returns (uint256);\\n}\\n\\ninterface ITimeSetter {\\n    event TimeIncreased(uint256 newTime, uint256 delta);\\n\\n    function increaseTime(uint256 delta) external;\\n}\\n\",\"keccak256\":\"0xeb0fa861febbb5f5956ea9f48a88c812671564d249ddd8c5c00740e922eb056d\",\"license\":\"MIT\"},\"solc_0.8/utils/GenericErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice Not authorized to perform this operation\\nerror NotAuthorized();\\n\",\"keccak256\":\"0x333aa48943e66849a9350384e7ec2553b93e8a8a12b8ad300d3341f7c98b60fd\",\"license\":\"MIT\"}},\"version\":1}",
  "storageLayout": {
    "storage": [],
    "types": null
  },
  "userdoc": {
    "errors": {
      "NotAuthorized()": [
        {
          "notice": "Not authorized to perform this operation"
        }
      ]
    },
    "events": {
      "OwnershipTransferred(address,address)": {
        "notice": "This emits when ownership of the contract changes."
      }
    },
    "kind": "user",
    "methods": {
      "owner()": {
        "notice": "Get the address of the owner"
      },
      "transferOwnership(address)": {
        "notice": "Set the address of the new owner of the contract"
      },
      "withdrawERC20(address,address)": {
        "notice": "withdraw the total balance of a particular ERC20 token owned by this contract."
      }
    },
    "version": 1
  },
  "argsData": "0x00000000000000000000000061c461ecc993aadeb7e4b47e96d1b8cc37314b20"
}